apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  name: create-promote-pull-request
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/provider-type: community
spec:
  description: This Task can be used to update image digest in a Git repo using the kustomize
  params:
    - name: GIT_BRANCH
      type: string
    - name: OWNER
      type: string
  workspaces:
    - description: The workspace consisting of maven project.
      name: source
  results:
    - name: target_branch_name
      description: The branch name used for pull-request
    - name: source_branch_name
      description: The resulting current branch
    - name: repo_name
      description: Git Repo Url starting from organization path
  volumes:
    - name: githubtoken
      secret:
        secretName: github
  steps:
    - name: promote
      image: mirror.gcr.io/alpine/git:v2.26.2
      volumeMounts:
        - name: githubtoken
          readOnly: true
          mountPath: /etc/github-open-pr
      workingDir: $(workspaces.source.path)
      script: |
        set -x
        rm -rf pull-request-workdir
        export sonarlink=$(awk 'match($0,/ceTaskUrl=[\s\S]*.+/){print substr($0,RSTART+10,RLENGTH-10)}' target/sonar/report-task.txt)
        wget $sonarlink
        mv task* sonar-result.txt
        export result=$(awk 'match($0,/"status":"[A-Z]+/){print substr($0,RSTART+10,RLENGTH-10)}' sonar-result.txt)
        
        while [ "$result" == "IN_PROGRESS" ]; do
          sleep 60
          export sonarlink=$(awk 'match($0,/ceTaskUrl=[\s\S]*.+/){print substr($0,RSTART+10,RLENGTH-10)}' target/sonar/report-task.txt)
          wget $sonarlink
          mv task* sonar-result.txt
          export result=$(awk 'match($0,/"status":"[A-Z]+/){print substr($0,RSTART+10,RLENGTH-10)}' sonar-result.txt)
        done
        
        if [ "$result" != "SUCCESS" ]; then
          echo "Quality Gate not passed"
          exit 1
        else 
          current_branch=$(echo $(params.GIT_BRANCH) | awk -F/ '{print $NF}')
          git checkout $current_branch
          echo -n "$current_branch" > $(results.source_branch_name.path)
        
          if [ "$current_branch" == "main" ]; then
            target_branch_name=staging
          elif [  "$current_branch" == "staging" ]; then
            target_branch_name=production
          fi
          
          git config --global user.name "$(params.OWNER)"
          git config --global user.email "$(params.OWNER)@redhat.com"
          export TOKEN=$(cat /etc/github-open-pr/token)
          git add sonar-result.txt
          git commit -m "promote to $target_branch_name test"
          git -c credential.helper= -c credential.helper='!f() { echo username=$(params.OWNER); echo "password=$TOKEN"; };f' push origin main
        
          echo -n "$target_branch_name" > $(results.target_branch_name.path)
          base_git_url=$(git ls-remote --get-url origin)
          prefix="https://github.com/"
          echo -n "${base_git_url#"$prefix"}" > $(results.repo_name.path)
        
        fi