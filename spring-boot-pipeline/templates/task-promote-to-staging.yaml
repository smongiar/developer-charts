apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  name: create-promote-pull-request
  labels:
    app.kubernetes.io/version: '0.1'
    operator.tekton.dev/provider-type: community
spec:
  description: This Task can be used to update image digest in a Git repo using the kustomize
  params:
    - name: GIT_REPOSITORY
      type: string
    - name: COPY_FROM_PATH
      type: string
    - name: COPY_TO_PATH
      type: string
  workspaces:
    - description: The workspace consisting of maven project.
      name: maven-repo
  results:
    - name: branch_name
      description: The branch name used for pull-request
  steps:
    - name: promote
      #image: mirror.gcr.io/alpine/git:v2.26.2
      workingDir: $(workspaces.maven-repo.path)
      script: |
        set -x
        rm -rf pull-request-workdir
        export sonarlink=$(awk 'match($0,/ceTaskUrl=[\s\S]*.+/){print substr($0,RSTART+10,RLENGTH-10)}' target/sonar/report-task.txt)
        wget $sonarlink
        mv task* sonar-result.txt
        export result=$(awk 'match($0,/"status":"[A-Z]+/){print substr($0,RSTART+10,RLENGTH-10)}' sonar-result.txt)
        
        while [ "$result" == "IN_PROGRESS" ]; do
          sleep 60
          export sonarlink=$(awk 'match($0,/ceTaskUrl=[\s\S]*.+/){print substr($0,RSTART+10,RLENGTH-10)}' target/sonar/report-task.txt)
          wget $sonarlink
          mv task* sonar-result.txt
          export result=$(awk 'match($0,/"status":"[A-Z]+/){print substr($0,RSTART+10,RLENGTH-10)}' sonar-result.txt)
        done
        
        if [ "$result" != "SUCCESS" ]; then
          echo "Quality Gate not passed"
          exit 1
        else 
          cd /workspace/output/$(params.GIT_REPOSITORY)
          git checkout main
        
          branch_name=staging
          export staging_exists=$(git show-ref refs/heads/staging)
          if [ -n "$staging_exists" ]; then
            echo "branch exists"            
          else
            echo "checkout to new staging branch"
            git checkout -b staging
            echo "push to staging branch"
            git push origin +staging
          fi
          echo "fulling results branch_name"
          echo -n "$branch_name" > $(results.branch_name.path)
        
          git status
          git add .
          git commit -m "[$(context.taskRun.name)] Promotion from dev to staging (qa)"
        
          git push origin $branch_name
        fi