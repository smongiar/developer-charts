apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Values.component }}-service
  labels:
    system: {{ .Values.system }}
spec:
  workspaces:
  - name: maven-repo
  - name: maven-settings

  params:
    - default: https://github.com/{{ .Values.domain }}/{{ .Values.system }}-{{ .Values.component }}-service
      name: git-url
      type: string
      description: "component source Git pepository"
    - default: main
      name: git-revision
      type: string
      description: "component source Git revision"
    - default: refs/heads/main
      name: app-source-branch
      type: string
      description: "source branch for code quality"
    - default: ./src/main/docker/Dockerfile
      name: dockerfilePath
      type: string
      description: "path to Dockerfile"
    - default: {{ .Values.image.registry }}/{{ .Values.system }}-build/{{ .Values.component }}
      name: image
      type: string
      description: "container image"
    - default: latest
      name: version
      type: string
      description: "release version"

  tasks:
  - name: clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.git-revision)
    workspaces:
    - name: output
      workspace: maven-repo

  - name: build
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter: ["clone"]
    params:
    - name: GOALS
      value: 
        - compile
        - '-B'
    workspaces:
    - name: source
      workspace: maven-repo
    - name: maven-settings
      workspace: maven-settings

  - name: code-analysis
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter:
      - package
    workspaces:
      - name: source
        workspace: maven-repo
      - name: maven-settings
        workspace: maven-settings
    params:
      - name: GOALS
        value:
          - install
          - sonar:sonar
          - -Dsonar.host.url=http://sonarqube-sonarqube.sonarqube.svc.cluster.local:9000
          - -Dsonar.userHome=/tmp/sonar
          - -DskipTests=true

  - name: package
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter: ["build"]
    params:
    - name: GOALS
      value: 
        - package
        - -DskipTests
        - '-B'
    workspaces:
    - name: source
      workspace: maven-repo
    - name: maven-settings
      workspace: maven-settings

  - name: promote-pr
    runAfter:
      - code-analysis
    taskRef:
      name: create-promote-pull-request
    params:
      - name: GIT_BRANCH
        value: $(params.app-source-branch)
    workspaces:
      - name: source
        workspace: maven-repo

  - name: open-git-pull-request
    runAfter:
      - promote-pr
    taskRef:
      name: github-open-pr
    params:
      - name: REPO_FULL_NAME
        value: $(tasks.promote-pr.results.repo_name)
      - name: HEAD
        value: $(tasks.promote-pr.results.source_branch_name)
      - name: BASE
        value: $(tasks.promote-pr.results.target_branch_name)
      - name: TITLE
        value: "[$(context.taskRun.name)] Promotion to $(tasks.promote-pr.results.target_branch_name)"
      - name: BODY
        value: "{{ .Values.system }}-{{ .Values.component }}-service check passed for $(tasks.promote-pr.results.target_branch_name)"

  - name: build-container-image
    runAfter: ["package"]
    taskRef:
      name: buildah
      kind: ClusterTask
    workspaces:
    - name: source
      workspace: maven-repo
    params:
    - name: IMAGE
      value: $(params.image):$(params.version)
    - name: DOCKERFILE
      value: $(params.dockerfilePath)

  - name: deploy-to-dev
    runAfter: 
      - build-container-image 
    taskRef:
      name: openshift-client
      kind: ClusterTask
    params:
    - name: SCRIPT
      value: oc rollout restart deployment/{{ .Values.component }} -n {{ .Values.system }}-dev


